import asyncio

from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from Keyboards.keybord import choise_main, \
    choise_kat, \
    choise_back_in_fag, \
    back_menu, \
    back_main_menu, \
    no_add, \
    phone_contact, \
    del_menu, \
    info_kb
from utils import utils_sale
from create_bot import bot, CHAT
from Database.database import db


class FSMClientRegister(StatesGroup):
    name = State()
    phone_number = State()
    confirm = State()


def validate_user_status(user_status):
    if user_status == "left":
        return False
    if user_status == "canceled":
        return False
    else:
        return True


async def command_start(message: types.Message):
    """–°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞"""
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Loft, –∑–¥–µ—Å—å\n'
                         '–≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é –∏–ª–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫\n'
                         '–ê —Ç–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n'
                         '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –í–∞—Å —Å 14:00 –¥–æ 2:00',
                         reply_markup=choise_main)


async def command_info(message: types.Message):
    await message.answer('–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –í–∞—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–Ω–æ\n'
                         '—Å 14:00 –¥–æ 02:00\n'
                         '<a href="https://yandex.ru/navi/?whatshere%5Bpoint%5D=30.50191817985902%2C59.84026131145099&whatshere%5Bzoom%5D=18">'
                         '–ù–∞—à –∞–¥—Ä–µ—Å: –°–ü–±. –ø—Ä.–†—ã–±–∞—Ü–∫–∏–π 23 –∫–æ—Ä–ø—É—Å 2</a>',
                         disable_web_page_preview=True,
                         reply_markup=info_kb)


async def main(callback: types.CallbackQuery):
    await callback.answer(cache_time=3)
    await callback.message.edit_text(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Loft, –∑–¥–µ—Å—å\n'
                                          '–≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—é –∏–ª–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫\n'
                                          '–ê —Ç–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n'
                                          '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¥–ª—è –í–∞—Å —Å 14:00 –¥–æ 2:00',
                                     reply_markup=choise_main)


async def menu(callback: types.CallbackQuery):
    """–•–µ–Ω–¥–ª–µ—Ä –º–µ–Ω—é"""
    await callback.answer(cache_time=3)
    await callback.message.edit_text(text='–ü–æ–∂–∞–ª—É–π—Å—Ç—è –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
                                     reply_markup=choise_kat)


async def show_card_menu(callback: types.CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –º–µ–Ω—é"""
    media = types.MediaGroup()
    user_status = await bot.get_chat_member(chat_id=CHAT,
                                            user_id=callback.from_user.id)
    print(user_status['status'])
    if validate_user_status(user_status['status']):
        for ret in db.show_menu(callback.data[2::1]):
            await bot.send_photo(chat_id=callback.from_user.id,
                                 photo=ret[0])
            await bot.send_message(callback.from_user.id,
                                   f'{ret[1]}.^^^^–£–¥–∞–ª–∏—Ç—å',
                                   reply_markup=del_menu)
    else:
        await callback.answer(cache_time=3)
        for ret in db.show_menu(callback.data[2::1]):
            # photo = []
            # photo.append(ret[0])
            media.attach_photo(ret[0])
        await types.ChatActions.upload_photo()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ action "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏..."
        await asyncio.sleep(1)
        await bot.send_media_group(callback.from_user.id, media=media)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
        # await bot.send_photo(chat_id=callback.from_user.id,
        #                      photo=ret[0])
        await bot.send_message(callback.from_user.id,
                               text='_________–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å________',
                               reply_markup=back_menu)


async def call(callback: types.CallbackQuery):
    """–•–µ–Ω–¥–ª–µ—Ä –ü–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º """
    await callback.answer(cache_time=3)
    await callback.message.edit_text(text='–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É:\n'
                                          '<b>+79217779913</b>',
                                     reply_markup=choise_back_in_fag)


async def start_register(message: types.Message):
    """–ó–∞–ø—É—Å–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if db.check_user(message.from_user.id):
        await bot.send_message(message.from_user.id,
                               text=f'–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: {utils_sale.sale_count(message.from_user.id)}%\n'
                                    f'{utils_sale.info_for_next(message.from_user.id)}',
                               reply_markup=back_main_menu)
    else:
        await FSMClientRegister.name.set()
        await bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
                               reply_markup=no_add)


async def add_register_name(message: types.Message, state: FSMContext):
    """–õ–æ–≤–∏–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    async with state.proxy() as data:
        data['name'] = message.text
    await FSMClientRegister.next()
    await bot.send_message(message.from_user.id,
                           '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n'
                           '–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É',
                           reply_markup=phone_contact)


async def add_phone_register(message: types.Message, state: FSMContext):
    """–õ–æ–≤–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ id """
    async with state.proxy() as data:
        data['phone'] = message.contact.phone_number
        data['id'] = message.contact.user_id
        data['count'] = 0
    await db.add_user(state)
    await bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ —Ç–µ–ø–µ—Ä—å —É –í–∞—Å –µ—Å—Ç—å –Ω–∞—à–∞\n'
                                                 '–ö–∞—Ä—Ç–∞ –õ–æ—è–ª—å–Ω–æ—Å—Ç–∏',
                           reply_markup=back_main_menu)
    await state.finish()


async def check_in(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã –ß–µ–∫-–ò–ù"""
    if db.check_user(message.from_user.id):
        await bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ!!!!\n'
                                                     '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')
        await bot.send_message(chat_id=CHAT,
                               text=f'–ö–ª–∏–µ–Ω—Ç:{db.check_count(message.from_user.id)[1]}.\n'
                                    f'–ü–æ—Å–µ—Ç–∏–ª –Ω–∞—Å: {db.check_count(message.from_user.id)[0]}\n'
                                    f'–°–∫–∏–¥–∫–∞: {utils_sale.sale_count(message.from_user.id)}%\n'
                                    f'—Ö–æ—á–µ—Ç –∑–∞—á–µ–∫–∏–Ω–∏—Ç—å—Å—è',
                               reply_markup=InlineKeyboardMarkup().
                               add(InlineKeyboardButton(
                                   '‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'confirm{message.from_user.id}')))
    else:
        await bot.send_message(message.from_user.id,
                               '–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏ –∫–∞—Ä—Ç—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ /card')


async def check_in_confirm(callback: types.CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ß–µ–∫-–ò–ù"""
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.answer(cache_time=3)
    db.add_chek_in(callback.data[7::1])
    await bot.send_message(chat_id=callback.data[7::1],
                           text='–í–∞—à–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ ü§ô')


def register_message_client(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"""
    dp.register_message_handler(command_start,
                                commands=['start', 'help'])
    dp.register_message_handler(command_info,
                                commands=['info'])
    dp.register_callback_query_handler(main,
                                       text="main")
    dp.register_callback_query_handler(menu,
                                       text="menu")
    dp.register_callback_query_handler(call,
                                       text="call")
    dp.register_callback_query_handler(show_card_menu,
                                       Text(startswith='m_'))
    dp.register_message_handler(start_register,
                                commands=['card'])
    dp.register_message_handler(add_register_name,
                                state=FSMClientRegister.name)
    dp.register_message_handler(add_phone_register,
                                content_types=types.ContentType.CONTACT,
                                state=FSMClientRegister.phone_number)
    dp.register_message_handler(check_in,
                                commands=['check_in'])
    dp.register_callback_query_handler(check_in_confirm,
                                       Text(startswith='confirm'))
